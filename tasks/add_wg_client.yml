---
## Workflow
## Assume that the key was generated in the install-client playbook
## look for $hostname in Vault / Public Key
## where do I get the client IP???
## look for wireguard_client_ip from hostlist

- set_fact:
    client_ip: "{{ wireguard_client_ip.split('/')[0]}}"
    ansible_python_interpreter: "{{ '/usr/bin/env python3' }}"
- name: "Check if there is an existing Private/Public Key for Endpoint"
  vars:
   ansible_python_interpreter: "{{ '/usr/bin/env python3' }}"
  hashivault_read:
    mount_point: '/kv/wireguard-client'
    secret: "{{ client_ip }}"
    version: 2
  register: wg_client_ip_keys
  #ignore_errors: yes
  delegate_to: localhost
  become: false
  become_user: njl

- name: "Dancing Bear"
  debug:
    msg: "{{ wg_client_ip_keys }}"
  when: wg_client_ip_keys.rc == 0


- set_fact:
    vault_key: "{{ wireguard_client_server_endpoint.split(':')[0]}}"
    wireguard_client_public_key: "{{ wg_client_ip_keys.value.PublicKey }}"

- name: "Check for Public Key of Dest  Server"
  hashivault_read:
    mount_point: '/kv/wireguard-server'
    secret: "{{ vault_key }}"
    version: 2
  register: wg_server_ip_keys
#  ignore_errors: yes
  delegate_to: localhost
  become: false
  become_user: "{{ local_ssh_user }}"

- name: "Staged Update"
  debug:
    msg: "{{ wg_server_ip_keys }}"
  when: wg_server_ip_keys.rc == 0

- block:
  - set_fact:
      update_data: "{{ wg_server_ip_keys.value | combine( { wireguard_client_ip:  wireguard_client_public_key } ) }}"

  - name: "Dancing Bear"
    debug:
      msg: "{{ update_data }}"
    when: wg_server_ip_keys.rc == 0

  - name: "Add keys to vault"
    hashivault_write:
      mount_point: '/kv/wireguard-server'
      secret: "{{ vault_key }}"
      version: 2
      data: "{{ update_data | to_json }}"

    register: wg_client_ip_keys_add
    delegate_to: localhost
    become: false
    become_user: "{{ local_ssh_user }}"
  when: wireguard_client_ip not in wg_server_ip_keys.value or (force_update is defined and force_update)
