---

## Workflow - store content inside the client section for $hostlist
- set_fact:
    vault_key: "{{ wireguard_client_ip.split('/')[0]}}"

- name: "Check if there is an existing Private/Public Key for Server"
  hashivault_read:
    mount_point: '/kv/wireguard-client'
    secret: "{{ vault_key }}"
    version: 2
  register: wg_client_ip_keys
  ignore_errors: yes
  delegate_to: localhost
  become: false
  become_user: njl

- name: "Dancing Bear"
  debug:
    msg: "{{ wg_client_ip_keys }}"
  when: wg_client_ip_keys.rc == 0

- name: "Dancing Bear"
  debug:
    msg: "{{ wg_client_ip_keys.rc }}"


- command: "wg --help"
  register: wg_subcommands
  changed_when: false

- set_fact:
    wg_syncconf: false

- set_fact:
    wg_syncconf: true
  when: wg_subcommands.stdout | regex_search('syncconf:')

- name: Show syncconf subcommand status
  debug:
    var: wg_syncconf

- name: Generate Private/Public Keys for host (and store in vault)
  block:

#$ip/private_key
#$ip/public_key




    - name: Generate WireGuard private key
      command: "wg genkey"
      register: wg_private_key_result
      changed_when: false

    - name: Set private key fact
      set_fact:
        wireguard_client_private_key: "{{ wg_private_key_result.stdout }}"


    - name: Derive WireGuard public key
      shell: "echo '{{ wireguard_client_private_key }}' | wg pubkey" # noqa 306
      register: wg_public_key_result
      changed_when: false

    - name: Set public key fact
      set_fact:
        wireguard_client_public_key: "{{ wg_public_key_result.stdout }}"

    - name: Set public key fact
      set_fact:
        wireguard_client_public_key_file: "{{wireguard_client_interface}}-{{inventory_hostname}}-public_key"
        wireguard_client_private_key_file: "{{wireguard_client_interface}}-{{inventory_hostname}}-private_key"

    - name: "Add keys to vault"
      hashivault_write:
        mount_point: '/kv/wireguard-client'
        secret: "{{ vault_key }}"
        version: 2
        data:
          PublicKey: "{{ wireguard_client_public_key }}"
          PrivateKey: "{{ wireguard_client_private_key }}"

      register: wg_client_ip_keys_add
      delegate_to: localhost
      become: false
      become_user: njl
#      ignore_errors: yes


#    - name: Pause for station identification
#      pause:
#        prompt: "Please put {{ wireguard_client_public_key }} on the home base config"

    - name: "Storing Public Key in {{wireguard_client_public_key_file}}"
      shell: echo "{{wireguard_client_public_key}}" > "{{ wireguard_remote_directory }}/{{wireguard_client_public_key_file}}"

    - name: "Storing Private Key in {{wireguard_client_private_key_file}}"
      shell: echo "{{wireguard_client_private_key}}" > "{{ wireguard_remote_directory }}/{{wireguard_client_private_key_file}}"

  tags: wireguard_generate_client_keys
  when: wg_client_ip_keys.failed  or  'PrivateKey' not in wg_client_ip_keys.value or 'PublicKey' not in wg_client_ip_keys.value
